package com.example.botforconsultations.api.bot.utils;

import com.example.botforconsultations.core.model.Consultation;
import com.example.botforconsultations.core.model.StudentConsultation;
import com.example.botforconsultations.core.model.Subscription;
import com.example.botforconsultations.core.model.TelegramUser;
import org.springframework.stereotype.Component;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;

/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è—Ö
 */
@Component
public class ConsultationMessageFormatter {

    private static final DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern("dd MMMM yyyy");
    private static final DateTimeFormatter SHORT_DATE_FORMATTER = DateTimeFormatter.ofPattern("dd.MM.yyyy");
    private static final DateTimeFormatter TIME_FORMATTER = DateTimeFormatter.ofPattern("HH:mm");

    /**
     * –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
     */
    public String formatConsultationsList(TelegramUser teacher, List<Consultation> consultations, String filter) {
        StringBuilder message = new StringBuilder();
        message.append(String.format("–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è %s %s:\n\n",
                teacher.getFirstName(),
                teacher.getLastName() != null ? teacher.getLastName() : ""));

        message.append(getFilterText(filter)).append("\n\n");

        if (consultations.isEmpty()) {
            message.append("–ù–µ—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.\n");
        } else {
            for (Consultation consultation : consultations) {
                message.append(formatConsultationShort(consultation));
            }
            message.append("\nüí° –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–µ–π\n");
            message.append("–∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ: ‚Ññ123\n");
        }
        return message.toString();
    }

    /**
     * –ö—Ä–∞—Ç–∫–∏–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –¥–ª—è —Å–ø–∏—Å–∫–∞
     */
    public String formatConsultationShort(Consultation consultation) {
        StringBuilder message = new StringBuilder();
        message.append(String.format("‚Ññ%d\n", consultation.getId()));
        message.append(String.format("üìÖ %s %s - %s\n",
                consultation.getDate().format(SHORT_DATE_FORMATTER),
                consultation.getStartTime().format(TIME_FORMATTER),
                consultation.getEndTime().format(TIME_FORMATTER)));

        if (consultation.getTitle() != null && !consultation.getTitle().isEmpty()) {
            message.append(String.format("üìù %s\n", consultation.getTitle()));
        }

        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
        String statusEmoji = switch (consultation.getStatus()) {
            case OPEN -> "‚úÖ –û—Ç–∫—Ä—ã—Ç–∞";
            case CLOSED -> "üîí –ó–∞–∫—Ä—ã—Ç–∞";
            case CANCELLED -> "‚ùå –û—Ç–º–µ–Ω–µ–Ω–∞";
            case REQUEST -> "‚è≥ –ó–∞–ø—Ä–æ—Å";
        };
        message.append(String.format("%s\n", statusEmoji));

        message.append("\n");
        return message.toString();
    }

    /**
     * –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
     */
    public String formatConsultationDetails(Consultation consultation, long registeredCount, StudentConsultation studentRegistration) {
        StringBuilder message = new StringBuilder();
        message.append(String.format("üìã –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è ‚Ññ%d\n\n", consultation.getId()));
        message.append(String.format("üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: %s %s\n",
                consultation.getTeacher().getFirstName(),
                consultation.getTeacher().getLastName() != null ? consultation.getTeacher().getLastName() : ""));
        message.append(String.format("üìÖ –î–∞—Ç–∞: %s\n", consultation.getDate().format(DATE_FORMATTER)));
        message.append(String.format("üïê –í—Ä–µ–º—è: %s - %s\n",
                consultation.getStartTime().format(TIME_FORMATTER),
                consultation.getEndTime().format(TIME_FORMATTER)));

        if (consultation.getTitle() != null && !consultation.getTitle().isEmpty()) {
            message.append(String.format("\nüìù –¢–µ–º–∞: %s\n", consultation.getTitle()));
        }

        // –ï—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if (studentRegistration != null && studentRegistration.getMessage() != null && !studentRegistration.getMessage().isEmpty()) {
            message.append(String.format("\nüí¨ –í–∞—à –≤–æ–ø—Ä–æ—Å: %s\n", studentRegistration.getMessage()));
        }

        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å —É—á—ë—Ç–æ–º –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        message.append("\nüë• –ó–∞–ø–∏—Å–∞–Ω–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: ");
        if (consultation.getCapacity() != null && consultation.getCapacity() > 0) {
            message.append(String.format("%d/%d", registeredCount, consultation.getCapacity()));
        } else {
            message.append(String.format("%d (–±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π)", registeredCount));
        }

        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
        String statusText = switch (consultation.getStatus()) {
            case OPEN -> "‚úÖ –û—Ç–∫—Ä—ã—Ç–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏";
            case CLOSED -> "üîí –ó–∞–ø–∏—Å—å –∑–∞–∫—Ä—ã—Ç–∞";
            case CANCELLED -> "‚ùå –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞";
            case REQUEST -> "‚è≥ –ó–∞–ø—Ä–æ—Å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é";
        };
        message.append(String.format("\nüìä –°—Ç–∞—Ç—É—Å: %s", statusText));

        message.append("\n\nüí° –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:");
        return message.toString();
    }

    /**
     * –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏
     */
    public String formatRegistrationConfirmation() {//(Consultation consultation, String studentMessage, long registeredCount) {
        StringBuilder message = new StringBuilder();
        message.append("‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é!\n");
//        message.append(String.format("üìã –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è ‚Ññ%d\n", consultation.getId()));
//        message.append(String.format("üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: %s %s\n",
//                consultation.getTeacher().getFirstName(),
//                consultation.getTeacher().getLastName() != null ? consultation.getTeacher().getLastName() : ""));
//        message.append(String.format("üìÖ –î–∞—Ç–∞: %s\n", consultation.getDate().format(DATE_FORMATTER)));
//        message.append(String.format("üïê –í—Ä–µ–º—è: %s - %s\n",
//                consultation.getStartTime().format(TIME_FORMATTER),
//                consultation.getEndTime().format(TIME_FORMATTER)));
//        message.append(String.format("\nüìù –í–∞—à –≤–æ–ø—Ä–æ—Å: %s\n", studentMessage));
//
//        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å —É—á—ë—Ç–æ–º –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
//        message.append("\nüë• –ó–∞–ø–∏—Å–∞–Ω–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: ");
//        if (consultation.getCapacity() != null && consultation.getCapacity() > 0) {
//            message.append(String.format("%d/%d", registeredCount, consultation.getCapacity()));
//        } else {
//            message.append(String.format("%d (–±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π)", registeredCount));
//        }

        return message.toString();
    }

    /**
     * –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ –∑–∞–ø–∏—Å–∏
     */
    public String formatCancellationConfirmation() {//(Consultation consultation) {
        StringBuilder message = new StringBuilder();
        message.append("‚ùå –ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞\n");
//        message.append(String.format("üìã –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è ‚Ññ%d\n", consultation.getId()));
//        message.append(String.format("üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: %s %s\n",
//                consultation.getTeacher().getFirstName(),
//                consultation.getTeacher().getLastName() != null ? consultation.getTeacher().getLastName() : ""));
//        message.append(String.format("üìÖ –î–∞—Ç–∞: %s\n", consultation.getDate().format(DATE_FORMATTER)));
//        message.append(String.format("üïê –í—Ä–µ–º—è: %s - %s\n",
//                consultation.getStartTime().format(TIME_FORMATTER),
//                consultation.getEndTime().format(TIME_FORMATTER)));
        return message.toString();
    }

    /**
     * –°–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–µ–π —Å—Ç—É–¥–µ–Ω—Ç–∞
     */
    public String formatStudentRegistrations(List<StudentConsultation> registrations) {
        if (registrations.isEmpty()) {
            return "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.\n\n" +
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \"üîç –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏\" –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π.";
        }

        LocalDate today = LocalDate.now();
        List<StudentConsultation> futureRegistrations = new java.util.ArrayList<>();
        List<StudentConsultation> pastRegistrations = new java.util.ArrayList<>();

        // –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ –±—É–¥—É—â–∏–µ –∏ –ø—Ä–æ—à–µ–¥—à–∏–µ (—Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ —Å—á–∏—Ç–∞—é—Ç—Å—è –±—É–¥—É—â–∏–º–∏)
        for (StudentConsultation sc : registrations) {
            Consultation consultation = sc.getConsultation();
            if (consultation.getDate().isAfter(today) || consultation.getDate().isEqual(today)) {
                futureRegistrations.add(sc);
            } else {
                pastRegistrations.add(sc);
            }
        }

        StringBuilder message = new StringBuilder();
        message.append("üìù –í–∞—à–∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏\n\n");

        if (!futureRegistrations.isEmpty()) {
            message.append("üìÖ –ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏:\n\n");
            futureRegistrations.forEach(sc -> message.append(formatStudentConsultation(sc, true)));
        }

        if (!pastRegistrations.isEmpty()) {
            message.append("üìÜ –ü—Ä–æ—à–µ–¥—à–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏:\n\n");
            pastRegistrations.forEach(sc -> message.append(formatStudentConsultation(sc, false)));
        }

        message.append(String.format("\n–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: %d", registrations.size()));
        if (!futureRegistrations.isEmpty() || !pastRegistrations.isEmpty()) {
            message.append(String.format(" (–ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö: %d, –ø—Ä–æ—à–µ–¥—à–∏—Ö: %d)",
                    futureRegistrations.size(), pastRegistrations.size()));
        }

        return message.toString();
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞
     */
    private String formatStudentConsultation(StudentConsultation sc, boolean includeDetails) {
        Consultation consultation = sc.getConsultation();
        StringBuilder message = new StringBuilder();
        message.append(String.format("üìã –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è ‚Ññ%d\n", consultation.getId()));
        message.append(String.format("üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: %s %s\n",
                consultation.getTeacher().getFirstName(),
                consultation.getTeacher().getLastName() != null ? consultation.getTeacher().getLastName() : ""));
        message.append(String.format("üìÖ –î–∞—Ç–∞: %s\n", consultation.getDate().format(DATE_FORMATTER)));
        message.append(String.format("üïê –í—Ä–µ–º—è: %s - %s\n",
                consultation.getStartTime().format(TIME_FORMATTER),
                consultation.getEndTime().format(TIME_FORMATTER)));

        if (includeDetails) {
            if (sc.getMessage() != null && !sc.getMessage().isEmpty()) {
                message.append(String.format("üìù –í–∞—à –≤–æ–ø—Ä–æ—Å: %s\n", sc.getMessage()));
            }

            if (consultation.getStatus() != null) {
                String statusEmoji = switch (consultation.getStatus()) {
                    case OPEN -> "‚úÖ";
                    case CLOSED -> "üîí";
                    case CANCELLED -> "‚ùå";
                    case REQUEST -> "‚è≥";
                };
                message.append(String.format("%s –°—Ç–∞—Ç—É—Å: %s\n", statusEmoji, consultation.getStatus()));
            }
        }

        message.append("\n");
        return message.toString();
    }

    /**
     * –°–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–∞
     */
    public String formatSubscriptions(List<Subscription> subscriptions) {
        if (subscriptions.isEmpty()) {
            return "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π.\n\n" +
                    "–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –µ–≥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π.\n" +
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \"üîç –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏\" ‚Üí –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è ‚Üí \"üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è\"";
        }

        StringBuilder message = new StringBuilder();
        message.append("üîî –í–∞—à–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:\n\n");
        message.append("–í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Å–ª–µ–¥—É—é—â–∏—Ö –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π:\n\n");

        for (Subscription subscription : subscriptions) {
            TelegramUser teacher = subscription.getTeacher();
            message.append(TeacherNameFormatter.formatFullName(teacher));
            message.append("\n");
        }

        message.append(String.format("\n–í—Å–µ–≥–æ –ø–æ–¥–ø–∏—Å–æ–∫: %d\n\n", subscriptions.size()));
        message.append("–î–ª—è –æ—Ç–º–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –≤ —Ä–∞–∑–¥–µ–ª–µ \"üîç –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏\" " +
                "–∏ –Ω–∞–∂–º–∏—Ç–µ \"üîï –û—Ç–ø–∏—Å–∞—Ç—å—Å—è\"");

        return message.toString();
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞
     */
    private String getFilterText(String filter) {
        return switch (filter) {
            case "future" -> "üìÖ –ü–æ–∫–∞–∑–∞–Ω—ã –±—É–¥—É—â–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏";
            case "past" -> "üìÖ –ü–æ–∫–∞–∑–∞–Ω—ã –ø—Ä–æ—à–µ–¥—à–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏";
            default -> "üìÖ –ü–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏";
        };
    }

    /**
     * –°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π —Å—Ç—É–¥–µ–Ω—Ç–∞
     */
    public String formatRequestsList(List<Consultation> requests) {
        if (requests.isEmpty()) {
            return "‚ùì –ü–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π –æ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.\n\n" +
                    "–õ—é–±–æ–π —Å—Ç—É–¥–µ–Ω—Ç –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:\n" +
                    "\"‚ùì –ó–∞–ø—Ä–æ—Å–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é\"";
        }

        StringBuilder message = new StringBuilder();
        message.append("üìã –ó–∞–ø—Ä–æ—Å—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π –æ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:\n\n");

        for (Consultation request : requests) {
            String statusEmoji = switch (request.getStatus()) {
                case REQUEST -> "‚è≥";
                case OPEN -> "‚úÖ";
                case CLOSED -> "üîí";
                case CANCELLED -> "‚ùå";
            };

            int interestedCount = request.getRegUsers() != null ? request.getRegUsers().size() : 0;

            message.append(String.format("%s ‚Ññ%d - %s\n",
                    statusEmoji,
                    request.getId(),
                    request.getTitle()));
            message.append(String.format("   üë§ –ê–≤—Ç–æ—Ä: %s\n",
                    TeacherNameFormatter.formatFullName(request.getTeacher())));
            message.append(String.format("   üë• –ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–æ: %d\n",
                    interestedCount));
            message.append("\n");
        }

        message.append("üí° –í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π");
        return message.toString();
    }

    /**
     * –î–µ—Ç–∞–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
     */
    public String formatRequestDetails(Consultation request) {
        StringBuilder message = new StringBuilder();
        message.append(String.format("üìã –ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ ‚Ññ%d\n\n", request.getId()));

        message.append(String.format("üìù –¢–µ–º–∞: %s\n\n", request.getTitle()));

        message.append(String.format("üë§ –ê–≤—Ç–æ—Ä –∑–∞–ø—Ä–æ—Å–∞: %s\n",
                TeacherNameFormatter.formatFullName(request.getTeacher())));

        // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
        int interestedCount = request.getRegUsers() != null ? request.getRegUsers().size() : 0;
        message.append(String.format("\nüë• –ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: %d\n",
                interestedCount));

        // –°—Ç–∞—Ç—É—Å –∑–∞–ø—Ä–æ—Å–∞
        String statusText = switch (request.getStatus()) {
            case REQUEST -> "‚è≥ –û–∂–∏–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º";
            case OPEN -> "‚úÖ –ü—Ä–∏–Ω—è—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º";
            case CLOSED -> "üîí –ó–∞–ø—Ä–æ—Å –∑–∞–∫—Ä—ã—Ç";
            case CANCELLED -> "‚ùå –ó–∞–ø—Ä–æ—Å –æ—Ç–º–µ–Ω—ë–Ω";
        };
        message.append(String.format("üìä –°—Ç–∞—Ç—É—Å: %s\n", statusText));

        message.append("\nüí° –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:");

        return message.toString();
    }

    /**
     * –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
     */
    public String formatRequestCreationConfirmation(Consultation request) {
        return String.format(
                "‚úÖ –ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n\n" +
                        "üÜî –ù–æ–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞: %d\n" +
                        "üìù –¢–µ–º–∞: %s\n\n" +
                        "–í–∞—à –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º. " +
                        "–ö–æ–≥–¥–∞ –∫—Ç–æ-—Ç–æ –∏–∑ –Ω–∏—Ö –ø—Ä–∏–º–µ—Ç –∑–∞–ø—Ä–æ—Å, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.\n\n" +
                        "–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Å–≤–æ–∏ –∑–∞–ø—Ä–æ—Å—ã –≤ —Ä–∞–∑–¥–µ–ª–µ \"üìã –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–ø—Ä–æ—Å—ã\"",
                request.getId(),
                request.getTitle()
        );
    }
}

